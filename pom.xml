<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.excavator.boot</groupId>
	<artifactId>generator-proxy</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>generator-proxy</name>
	<packaging>jar</packaging>
	<description>Generator Proxy</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
        <scala.version>2.13.3</scala.version>
        <junit.jupiter.version>5.5.2</junit.jupiter.version>
        <fastjson.version>1.2.83</fastjson.version>
        <alchim31.scala.plugin>4.4.0</alchim31.scala.plugin>
        <maven.compiler.plugin>3.8.1</maven.compiler.plugin>
        <joda-time.version>2.10.6</joda-time.version>
        <assertj.version>3.9.1</assertj.version>
        <disruptor.version>3.3.7</disruptor.version>
        <graalvm.version>20.1.0</graalvm.version>
    </properties>

	<dependencies>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>
		<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
       <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
        </dependency>
        <dependency>
            <groupId>org.excavator.boot</groupId>
            <artifactId>shardingsphere</artifactId>
            <version>5.0.0-RC1-SPARK</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.alibaba.otter/canal.client -->
        <!-- https://mvnrepository.com/artifact/joda-time/joda-time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

	<build>
		<plugins>
			<plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${alchim31.scala.plugin}</version>
                <executions>
                    <execution>
                        <id>compile-scala</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile-scala</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <recompileMode>incremental</recompileMode>
                    <compileOrder>Mixed</compileOrder>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <args>
                        <arg>-deprecation</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>
            <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin}</version>
				<configuration>
                    <compilerId>javac-with-errorprone</compilerId>
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
					 <compilerArgs>
                      <!--   <arg>-verbose</arg>  -->
                       <!--     <arg>-Xbootclasspath/a: ${JAVA_HOME}/lib/rt.jar:${JAVA_HOME}/lib/jce.jar:${JAVA_HOME}/lib/jsse.jar</arg> -->
                      </compilerArgs>
				</configuration>
                <dependencies>
                        <dependency>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-compiler-javac-errorprone</artifactId>
                        <version>2.8</version>
                        </dependency>
                        <!-- override plexus-compiler-javac-errorprone's dependency on
                            Error Prone with the latest version -->
                        <dependency>
                        <groupId>com.google.errorprone</groupId>
                        <artifactId>error_prone_core</artifactId>
                        <version>2.1.1</version>
                        </dependency>
                    </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>org.excavator.boot.generator.proxy.ProxyFileGenerator</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>assemble-all</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->
            <plugin>
                <groupId>org.graalvm.nativeimage</groupId>
                <artifactId>native-image-maven-plugin</artifactId>
                <version>${graalvm.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>native-image</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
                <configuration>
                    <skip>false</skip>
                    <imageName>generator-proxy</imageName>
                    <buildArgs>
                        --allow-incomplete-classpath
                        --report-unsupported-elements-at-runtime
                        -H:+ReportExceptionStackTraces
                        --no-server
                        --initialize-at-build-time=org.reactivestreams.Publisher
                        --initialize-at-run-time=io.netty.util.NetUtil
                        --initialize-at-run-time=io.netty.channel.unix.Socket
                        --initialize-at-run-time=io.netty.channel.unix.IovArray
                        --initialize-at-run-time=io.netty.channel.epoll.EpollEventLoop
                        --initialize-at-run-time=io.netty.channel.unix.Errors
                        --no-fallback
                        --allow-incomplete-classpath
                        -H:+ReportUnsupportedElementsAtRuntime
                        -H:+AllowVMInspection
                        --allow-incomplete-classpath
                        -H:ReflectionConfigurationFiles=classes/reflect.json
                    </buildArgs>
                </configuration>
            </plugin>
		</plugins>
	</build>


</project>
